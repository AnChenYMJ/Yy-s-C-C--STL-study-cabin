#include <iostream>
using namespace std;

void STLlist()
{
//链表容器 list 与 forward_list
{
	//list是双向链表的容器
		//双向链表：两节点之间的指针相互指向对方，呈一条链状，像通信的双工。即我指你，我指上一个，你指我，你还指下一个。
		//string的元素是字符，vector的元素是数组元素，而list则是节点。
		//list在所有编译器上都支持。
		//双向链表能在头、尾、中间，进行操作。（因为是双向）
		//有size（）函数能用，降低了容器效率，因为元素有所增减，相应的size也要增减。


	//forward_list是单向链表的容器
		//单向链表；两节点之间只有一个指针指向，即我指你，你指下一个。
		//forward_list是2001标准出来的，VS2005不支持，VS2012之后版本支持
		//单行链表则是大多在头部进行操作。	（因为是单向）如头添加，头删除
		//不支持size（）函数，为了提高容器效率。


	//二者对比：
		//forward_list效率比list高。
		//list移植性好，所有编译器都支持，forward_list则部分编译器支持。
		//二者的用法作用都差不多的，有几个成员函数不一样而已。
		//对效率要求不高的话，用谁都可以，哪个顺手用哪个。
		//对效率要求高的话，用forward_list要更合理。
		//双线链表比单向链表多了一个指向前方的指针。

}

//双向链表与vector的区别
{
	//双线链表比单向链表多了一个指向前方的指针。

	//vector：
	//随机访问快，就是下标运算非常快，指哪里就哪里
	//尾添加（push_back）的效率非常高。
	//不支持快速插入与删除，效率慢

	//list：
	//随机访问慢，支持下标
	//支持快速插入与删除
}
}

int main()
{



	system("pause");
	return 0;
}